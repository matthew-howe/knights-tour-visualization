{"version":3,"sources":["components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","i","idx","lastMove","board","tour","moveKnight","setState","setTimeout","document","getElementById","click","sim","pos","filter","move","moves","length","coords","curBoard","boardVisited","possibleMoves","findMoves","moveIdx","curMove","validMove","push","knightsTour","pop","Array","fill","map","knightstour","_this2","black","Math","floor","knight","visited","el","includes","react_default","a","createElement","id","className","_this3","squares","renderSquare","onClick","startSim","Component","App","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d0dec75.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      i: -1,\n      idx: -1,\n      lastMove: [0,0],\n      board: [\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0],\n        [0,0,0,0,0,0,0,0]\n      ],\n      tour: [\n        56,\n        41,\n        24,\n        9,\n        3,\n        13,\n        7,\n        22,\n        5,\n        15,\n        30,\n        47,\n        62,\n        52,\n        58,\n        48,\n        33,\n        16,\n        1,\n        11,\n        26,\n        32,\n        49,\n        59,\n        53,\n        63,\n        46,\n        31,\n        14,\n        4,\n        10,\n        0,\n        17,\n        2,\n        8,\n        18,\n        12,\n        6,\n        23,\n        38,\n        55,\n        61,\n        51,\n        57,\n        40,\n        25,\n        42,\n        36,\n        21,\n        27,\n        37,\n        20,\n        35,\n        50,\n        60,\n        43,\n        28,\n        45,\n        39,\n        54,\n        44,\n        34,\n        19,\n        29,\n      ],\n    };\n  }\n\n  componentDidMount() {\n    this.moveKnight();\n  }\n\n  moveKnight() {\n    if (this.state.idx > 63) {\n      this.setState(state => ({\n        idx: 0,\n        i: state.i++,\n      }));\n    } else {\n      this.setState(state => ({\n        idx: (state.idx += 1),\n        i: (state.i += 1),\n      }));\n    }\n  }\n\n  startSim() {\n    for (let i = 0; i < 2000; i++) {\n      let sim = function(i) {\n        if (i % 5 === 0) {\n          return function() {\n            document.getElementById(['b1']).click();\n          };\n        }\n      };\n      setTimeout(sim(i), 50 * i);\n    }\n  }\n\n  findMoves(pos) {\n    let movesArr = [\n      [pos[0] - 1, pos[1] - 2],\n      [pos[0] - 2, pos[1] - 1],\n      [pos[0] + 1, pos[1] - 2],\n      [pos[0] + 2, pos[1] - 1],\n      [pos[0] - 2, pos[1] + 1],\n      [pos[0] - 1, pos[1] + 2],\n      [pos[0] + 1, pos[1] + 2],\n      [pos[0] + 2, pos[1] + 1],\n    ];\n    let posMoves = movesArr.filter(move => {\n      return move[0] >= 0 && move[1] >= 0 && move[0] < 8 && move[1] < 8;\n    });\n    return posMoves;\n  }\n\n  validMove(board, pos) {\n    return board[pos[0]][pos[1]] !== 1;\n  }\n\n  boardVisited(moves) {\n    return moves.length === 63;\n  }\n\n  coordConv(coords) {\n    return coords[0] * 8 + coords[1];\n  }\n\n  knightsTour(board, moves) {\n    const curBoard = board;\n\n    if (this.boardVisited(moves)) {\n      return true;\n    }\n\n    const lastMove = moves[moves.length - 1];\n\n    const possibleMoves = this.findMoves(lastMove);\n\n    for (let moveIdx = 0; moveIdx < possibleMoves.length; moveIdx++) {\n      const curMove = possibleMoves[moveIdx];\n      if (this.validMove(curBoard, curMove)) {\n        moves.push(curMove);\n        curBoard[curMove[0]][curMove[1]] = 1;\n        this.setState(state => ({\n          \n        }))\n\n        if (this.knightsTour(curBoard, moves)) {\n          return true;\n        }\n\n        moves.pop();\n        curBoard[curMove[0]][curMove[1]] = 0;\n      }\n    }\n    return false;\n  }\n\n  tour() {\n    const board = Array(8)\n      .fill(null)\n      .map(() => Array(8).fill(0));\n    let moves = [[0, 0]];\n    board[0][0] = 1;\n    const solution = this.knightstour(board, moves);\n    return solution ? moves : [];\n  }\n\n  renderSquare(i) {\n    let x = i % 8;\n    let y = Math.floor(i / 8);\n    let black = (x + y) % 2 === 1;\n    let knight = i === this.state.tour[this.state.idx];\n    let visitedArr = this.state.tour.filter((el, idx) => idx < this.state.idx);\n    let visited = visitedArr.includes(i);\n\n    return knight ? (\n      black ? (\n        <div id={i} className=\"black square knight\" />\n      ) : (\n        <div id={i} className=\"white square knight\" />\n      )\n    ) : black ? (\n      visited ? (\n        <div id={i} className=\"black square visited\" />\n      ) : (\n        <div id={i} className=\"black square\" />\n      )\n    ) : visited ? (\n      <div id={i} className=\"white square visited\" />\n    ) : (\n      <div id={i} className=\"white square\" />\n    );\n  }\n\n  render() {\n    let squares = [];\n    for (let i = 0; i < 64; i++) {\n      squares.push(this.renderSquare(i));\n    }\n    return (\n      <div id=\"main\">\n        <div id=\"board\">{squares}</div>\n        <div id=\"buttons\">\n          <button id=\"b1\" onClick={() => this.moveKnight()}>\n            Brute Force Permutation\n          </button>\n          <button id=\"b2\" onClick={() => this.moveKnight()}>\n            Divide and Conquer\n          </button>\n          <button id=\"b3\" onClick={() => this.moveKnight()}>\n            Warnsdorff's Rule\n          </button>\n          <button id=\"b4\" onClick={() => this.startSim()}>\n            Neural Network Solution\n          </button>\n          <div />\n          <p>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Iterations:{' '}\n            {this.state.i}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <div id=\"title\">\n        <h1>Knight's Tour</h1>\n        <p>By Matthew Howe</p>\n      </div>\n      <div>\n        <Board />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}