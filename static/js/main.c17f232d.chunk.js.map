{"version":3,"sources":["store/board.js","utils/utils.js","algorithms/backtracking.js","algorithms/warnsdorf.js","algorithms/divideandconquer.js","components/Board.js","App.js","serviceWorker.js","store/algorithm.js","store/index.js","index.js"],"names":["initialState","knight","board","iterations","util","pos","filter","move","moves","length","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","count","this","findMoves","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","validMove","err","return","num","backtrack","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","updateBoard","moveKnight","speed","iterate","updateSpeed","wrap","_context2","prev","setTimeout","_callee","curBoard","curPosition","possibleMoves","moveIdx","curMove","row","column","_context","boardVisited","abrupt","shuffle","push","console","log","stop","_x","_x2","_x3","_x4","_x5","_x6","_x7","apply","arguments","warnsdorf","lastMove","bestMove","bestCount","boardVisitedWarnsdorf","Infinity","numOfEmpty","t0","finish","alert","getNextPoint","x","y","lastX","lastY","nextX","nextY","offsetTypeOriginArr","offsetTypeSubstituteArr","offsetDirArr","_getPossibleNextPoint3","_getPossibleNextPoint","_getPointGridAttribut","blkChoiceX","blkChoiceY","gridSizeX","gridSizeY","gridLocX","gridLocY","pointAttribute","halve","mod_","left","right","getPointGridAttribute","_getPointGridAttribut2","slicedToArray","shouldReverse","t","p","next_a_offsetType","next_b_offsetType","pathOrigin","pathSubstitute","getPossibleNextPointOffsetType","_getPossibleNextPoint2","p_a","p_b","next_a_x_p","next_a_y_p","next_b_x_p","next_b_y_p","getPossibleNextPoint","_getPossibleNextPoint4","divideandconquer","curmove","lastmove","nextmove","_x8","Board","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","iter","start","bind","assertThisInitialized","e","setState","target","i","visited","black","props","react_default","createElement","key","className","_this2","squares","renderSquare","id","alt","src","href","onClick","name","onChange","handleChange","type","min","max","Component","connect","dispatch","newBoard","App","components_Board","Boolean","window","location","hostname","match","script","temp","reducer","combineReducers","action","assign","algorithm","newSpeed","newTemp","middleware","composeWithDevTools","applyMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c17f232d.chunk.js","sourcesContent":["const MOVE_KNIGHT = \"MOVE_KNIGHT\"\r\nconst UPDATE_BOARD = \"UPDATE_BOARD\"\r\nconst FAILURE = \"FAILURE\"\r\nconst RUN_SCRIPT = \"RUN_SCRIPT\"\r\n\r\nexport const moveKnight = (knight) => ({\r\n  type: MOVE_KNIGHT,\r\n  knight: knight\r\n})\r\n\r\nexport const updateBoard = (board) => ({\r\n  type: UPDATE_BOARD,\r\n  board: board\r\n})\r\n\r\nexport const failure = () => ({\r\n  type: FAILURE,\r\n})\r\n\r\nexport const runScript = () => ({\r\n  type: RUN_SCRIPT,\r\n})\r\n\r\nconst initialState = {\r\n  knight: [0, 0],\r\n  board: [\r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n                [0,0,0,0,0,0,0,0,0,0,0,0], \r\n  ],\r\n  iterations: 0\r\n}\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOVE_KNIGHT:\r\n      return Object.assign({}, state, {knight: [action.knight[1], action.knight[0]]})\r\n    case UPDATE_BOARD:\r\n      return Object.assign({}, state, {board: action.board})\r\n    case FAILURE:\r\n      alert(\"Failed to converge on a correct solution. Try again.\")\r\n      break;\r\n    case RUN_SCRIPT:\r\n      return initialState // reset the board\r\n    default:\r\n      console.log(\"Switch function error in board store\")\r\n      return initialState\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class utils {\r\n\r\n    findMoves(pos) {\r\n        // findmoves takes the [x, y] coordinates\r\n        // of the knight and returns an array of valid\r\n        // positions for the knight to move\r\n\r\n        let movesArr = [\r\n            [pos[0] - 1, pos[1] - 2],\r\n            [pos[0] - 2, pos[1] - 1],\r\n            [pos[0] + 1, pos[1] - 2],\r\n            [pos[0] + 2, pos[1] - 1],\r\n            [pos[0] - 2, pos[1] + 1],\r\n            [pos[0] - 1, pos[1] + 2],\r\n            [pos[0] + 1, pos[1] + 2],\r\n            [pos[0] + 2, pos[1] + 1],\r\n        ];\r\n        let posMoves = movesArr.filter(move => {\r\n            return move[0] >= 0 && move[1] >= 0 && move[0] < 12 && move[1] < 12;\r\n        });\r\n        return posMoves;\r\n    }\r\n\r\n    \r\n    validMove(board, pos) {\r\n        // validmove checks if the target square \r\n        // hasn't been visited yet\r\n        return board[pos[0]][pos[1]] !== 1;\r\n    }\r\n\r\n        \r\n    boardVisited(moves) {\r\n        // checks if every square has been visited\r\n        return moves.length === 143;\r\n    }\r\n\r\n    boardVisitedWarnsdorf(moves) {\r\n        // adjusted for warnsdorf's moves length\r\n        return moves.length === 145;\r\n    }\r\n\r\n\r\n    shuffle(array) {\r\n        // shuffling utility\r\n        var currentIndex = array.length,\r\n            temporaryValue,\r\n            randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    numOfEmpty( board, pos ) {\r\n        let count = 0;\r\n        let moves = this.findMoves(pos); \r\n\r\n        for (const move of moves) {\r\n            if (this.validMove(board, move)) count++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    mapNumToCoords(num) {\r\n        let y = Math.floor(num / 12);\r\n        let x = num % 12;\r\n        return [x, y]\r\n    }\r\n\r\n}\r\n\r\nlet util = new utils();\r\nexport default util;\r\n","import util from \"../utils/utils\";\r\n\r\n// @param {array[][]} board - 2d array of the board\r\n// @param {array[][] moves - 2d array of the moves so far\r\n// @param {object{}} updateBoard - function to update board state\r\n// @param {object{}} moveKnight - function to update knight state\r\n// @param {integer} speed - ms speed for each iteration\r\n// @param {void} iterate - function to change local iteration state\r\n// @param {object{}} updateSpeed - function to update speed state\r\nconst backtrack = async (\r\n  board,\r\n  moves,\r\n  updateBoard,\r\n  moveKnight,\r\n  speed,\r\n  iterate,\r\n  updateSpeed\r\n) => {\r\n  setTimeout(async () => {\r\n    iterate();\r\n    let curBoard = board;\r\n    curBoard[0][0] = 1;\r\n\r\n    if (util.boardVisited(moves)) return true;\r\n\r\n    const curPosition = moves[moves.length - 1];\r\n    let possibleMoves = util.findMoves(curPosition);\r\n    possibleMoves = util.shuffle(possibleMoves);\r\n\r\n    for (let moveIdx = 0; moveIdx < possibleMoves.length; moveIdx++) {\r\n      const curMove = possibleMoves[moveIdx];\r\n      if (util.validMove(curBoard, curMove)) {\r\n        moves.push(curMove);\r\n        let row = curMove[0];\r\n        let column = curMove[1];\r\n\r\n        curBoard[row][column] = 1;\r\n\r\n        moveKnight(curMove);\r\n        updateBoard(curBoard);\r\n        if (\r\n          backtrack(curBoard, moves, updateBoard, moveKnight, speed, iterate)\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"ended\", moves[moves.length - 1]);\r\n  }, 10);\r\n};\r\n\r\nexport default backtrack;\r\n","import util from '../utils/utils';\r\n\r\n\r\n// @param {array[][]} board - 2d array of the board\r\n// @param {array[][] moves - 2d array of the moves so far\r\n// @param {object{}} updateBoard - function to update board state\r\n// @param {object{}} moveKnight - function to update knight state\r\n// @param {integer} speed - ms speed for each iteration\r\n// @param {void} iterate - function to change local iteration state\r\n// @param {object{}} updateSpeed - function to update speed state\r\nconst warnsdorf = async (board, moves, updateBoard, moveKnight, speed, iterate, updateSpeed) => {\r\n    await setTimeout(async () => {\r\n        let curBoard = board; \r\n        if (util.boardVisitedWarnsdorf(moves)) return true;\r\n        iterate()\r\n\r\n        const lastMove = moves[moves.length - 1];\r\n        let possibleMoves = util.findMoves(lastMove);\r\n\r\n        // find the move with the most empty spaces\r\n        let bestMove;\r\n        let bestCount = Infinity;\r\n        for (const move of possibleMoves) {\r\n            const count = util.numOfEmpty( curBoard, move);\r\n            if (count < bestCount && util.validMove( curBoard, move)) {\r\n                bestCount = count;\r\n                bestMove = move;\r\n            }\r\n        }\r\n\r\n        // move the knight and update the board\r\n        if (bestMove[0] !== undefined && bestMove[1] !== undefined) {\r\n            moves.push(bestMove);\r\n            let row = bestMove[0];\r\n            let column = bestMove[1];\r\n            curBoard[row][column] = 1;\r\n            moveKnight(bestMove);\r\n            updateBoard(curBoard);\r\n        } else {\r\n            alert('failed to converge on correct solution!')\r\n            return false;\r\n        }\r\n\r\n        if (warnsdorf(curBoard, moves, updateBoard, moveKnight, speed, iterate)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }, speed);\r\n}\r\n\r\nexport default warnsdorf;\r\n","// returns the coordinates of the next move as an array [x, y]\r\n// @param {integer} x - x position of knight\r\n// @param {integer} y - y position of knight\r\n// @param {integer} lastX - last x position of knight\r\n// @param {integer} lastY - last y position of knight\r\nfunction getNextPoint(x, y, lastX, lastY) {\r\n  \r\n  const offsetTypeOriginArr = [3, 7, 6, 2, 7, 3, 2, 6]\r\n  const offsetTypeSubstituteArr = [4, 3, 7, 4, 0, 7, 3, 0]\r\n  const offsetDirArr = [\r\n    [-2, -1], [-1, -2], [1, -2], [2, -1], [2, 1], [1, 2], [-1, 2], [-2, 1]\r\n  ]\r\n\r\n  // returns [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute]\r\n  // @param {integer} x - x position of the knight\r\n  // @param {integer} y - y position of the knight\r\n  function getPointGridAttribute(x, y) {\r\n\r\n    let gridSizeX = 12;\r\n    let gridSizeY = 12;\r\n    let gridLocX = x;\r\n    let gridLocY = y;\r\n    let blkChoiceX, blkChoiceY;\r\n\r\n    let pointAttribute = 8;\r\n\r\n    do {\r\n      /* process x  */ \r\n      let halve = gridSizeX / 2\r\n      let mod_ = halve % 2\r\n      let left = halve - mod_\r\n      let right = halve + mod_\r\n\r\n      if (gridLocX < left) {\r\n        gridSizeX = left;\r\n        blkChoiceX = 1;\r\n      } else {\r\n        gridSizeX = right;\r\n        gridLocX -= right;\r\n        blkChoiceX = 2;\r\n      }\r\n\r\n      /* process y */\r\n      halve = gridSizeY / 2;\r\n      mod_ = halve % 2;\r\n      left = halve - mod_\r\n      right = halve + mod_\r\n\r\n      if (gridLocY < left) {\r\n        gridSizeY = left\r\n        blkChoiceY = 1;\r\n      } else {\r\n        gridSizeY = right;\r\n        gridLocY -= left;\r\n        blkChoiceY = 2;\r\n      }\r\n\r\n\r\n    pointAttribute =\r\n      blkChoiceX === 1 && blkChoiceY === 1 && gridLocX === gridSizeX - 3 && gridLocY === gridSizeY - 1 ? 0 :\r\n      blkChoiceX === 1 && blkChoiceY === 1 && gridLocX === gridSizeX - 1 && gridLocY === gridSizeY - 2 ? 1 :\r\n                  blkChoiceX === 2 && blkChoiceY === 1 && gridLocX === 1 && gridLocY === gridSizeY - 3 ? 2 :\r\n                  blkChoiceX === 2 && blkChoiceY === 1 && gridLocX === 0 && gridLocY === gridSizeY - 1 ? 3 :\r\n                              blkChoiceX === 2 && blkChoiceY === 2 && gridLocX === 2 && gridLocY === 0 ? 4 :\r\n                              blkChoiceX === 2 && blkChoiceY === 2 && gridLocX === 0 && gridLocY === 1 ? 5 :\r\n                  blkChoiceX === 1 && blkChoiceY === 2 && gridLocX === gridSizeX - 2 && gridLocY === 2 ? 6 :\r\n                  blkChoiceX === 1 && blkChoiceY === 2 && gridLocX === gridSizeX - 1 && gridLocY === 0 ? 7 : pointAttribute\r\n\r\n\r\n    } while (!((gridSizeX <= 12 && gridSizeY <= 12) &&\r\n            (gridSizeX < 12 || gridSizeY < 12)))  \r\n\r\n    return [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute]\r\n  }\r\n\r\n\r\n\r\n  function getPossibleNextPointOffsetType(x, y) {\r\n    const Grid6_6 =\r\n    [\r\n      [[4, 5], [5, 6], [4, 7], [4, 7], [5, 7], [6, 7]],\r\n      [[3, 4], [3, 6], [0, 3], [3, 5], [0, 6], [0, 7]],\r\n      [[2, 5], [1, 4], [0, 1], [3, 4], [2, 5], [1, 6]],\r\n      [[2, 5], [5, 6], [4, 7], [0, 2], [1, 5], [0, 6]],\r\n      [[3, 4], [1, 4], [4, 7], [4, 7], [0, 2], [1, 7]],\r\n      [[2, 3], [1, 3], [1, 0], [3, 0], [0, 2], [0, 1]]\r\n    ];\r\n\r\n    let [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute] = getPointGridAttribute(x, y)\r\n\r\n    const shouldReverse = gridSizeX < gridSizeY\r\n\r\n    if (shouldReverse) {\r\n      /* swap gridSizeX and gridSizeY */\r\n      let t = gridSizeX\r\n      gridSizeX = gridSizeY\r\n      gridSizeY = t\r\n\r\n      /* swap gridSizeX and gridSizeY */\r\n      t = gridLocX\r\n      gridLocX = gridLocY\r\n      gridLocY = t\r\n    }\r\n\r\n    const p = Grid6_6[gridLocY][gridLocX]\r\n    let next_a_offsetType = p[0]\r\n    let next_b_offsetType = p[1]\r\n\r\n    if (shouldReverse) {\r\n      next_a_offsetType = (9 - next_a_offsetType) % 8\r\n      next_b_offsetType = (9 - next_b_offsetType) % 8;\r\n    }\r\n\r\n    if (pointAttribute !== 8) {\r\n      let pathOrigin = offsetTypeOriginArr[pointAttribute]\r\n      let pathSubstitute = offsetTypeSubstituteArr[pointAttribute]\r\n      if (next_a_offsetType === pathOrigin) {\r\n        next_a_offsetType = pathSubstitute\r\n      } else if (next_b_offsetType === pathOrigin) {\r\n        next_b_offsetType = pathSubstitute\r\n      } else {\r\n        console.log('pathOrigin must always be one of next_a_offsetType and next_b_offset')\r\n      }\r\n    }\r\n\r\n      \r\n    console.log('\\n', 'gridSizeX: ', gridSizeX, '\\n',\r\n      'gridSizeY: ', gridSizeY,'\\n',\r\n      'gridLocX: ', gridLocX, '\\n',\r\n      'gridLocY: ', gridLocY, '\\n',\r\n      'pointAttribute: ', pointAttribute,'\\n',\r\n      'p: ', p,'\\n',\r\n      'next_a_offsetType: ', next_a_offsetType,'\\n',\r\n      'next_b_offsetType: ', next_b_offsetType,'\\n')\r\n\r\n    return [gridSizeX, gridSizeY, gridLocX, gridLocY,\r\n      pointAttribute, p, next_a_offsetType, next_b_offsetType]\r\n  }\r\n\r\n  function getPossibleNextPoint(x, y) {\r\n\r\n    let [gridSizeX, gridSizeY, gridLocX, gridLocY,\r\n      pointAttribute, p, next_a_offsetType, next_b_offsetType] = \r\n      getPossibleNextPointOffsetType(x, y)\r\n\r\n    let p_a = offsetDirArr[next_a_offsetType]\r\n    let p_b = offsetDirArr[next_b_offsetType]\r\n    let next_a_x_p = x + p_a[0]\r\n    let next_a_y_p = y + p_a[1]\r\n    let next_b_x_p = x + p_b[0]\r\n    let next_b_y_p = y + p_b[1]\r\n\r\n    console.log('\\n', 'p_a: ', p_a, '\\n',\r\n      'x: ', x, 'y: ', y,'\\n',\r\n      'p_b: ', p_b,'\\n',\r\n      'next_a_x_p: ', next_a_x_p,'\\n',\r\n      'next_a_y_p: ', next_a_y_p,'\\n',\r\n      'next_b_x_p: ', next_b_x_p,'\\n',\r\n      'next_b_y_p: ', next_b_y_p,'\\n')\r\n\r\n    return [p_b, next_a_x_p, next_a_y_p, next_b_x_p, next_b_y_p]\r\n  }\r\n  //\r\n\r\n  let nextX, nextY\r\n  \r\n  let [p_b, next_a_x_p, next_a_y_p, next_b_x_p, next_b_y_p] = \r\n    getPossibleNextPoint(x, y)\r\n\r\n  if (next_a_x_p === lastX && next_a_y_p === lastY) {\r\n    nextX = next_b_x_p\r\n    nextY = next_b_y_p \r\n  } else if (next_b_x_p === lastX && next_b_y_p === lastY) {\r\n    nextX = next_a_x_p\r\n    nextY = next_a_y_p\r\n  } else { console.log('Neither of the next pointers match the lastXY (getNextPoint') }\r\n  \r\n  console.log('\\n','lastX: ', lastX, 'lastY: ', lastY, '\\n')\r\n  console.log('\\n','nextX: ', nextX,'nextY: ',nextY,'\\n')\r\n  return [nextX, nextY]\r\n}\r\n\r\nconst pointSerialize = (x, y) => x * 12 + y\r\n\r\n\r\n// TODO: maybe unnecessary \r\nfunction getNextPointSerialize(x, y, lastX, lastY) {\r\n\r\n  console.log('\\n', 'starting x: ', x,'\\n',\r\n    'starting y: ', y,'\\n',\r\n    'last x: ', lastX,'\\n',\r\n    'last y: ', lastY,'\\n')\r\n\r\n  let [nextX, nextY] = getNextPoint(x, y, lastX, lastY)\r\n  console.log('\\n','serialized: ',pointSerialize(nextX, nextY,'\\n'))\r\n  return pointSerialize(nextX, nextY)\r\n}\r\n\r\n// export default getNextPoint;\r\n\r\n\r\n\r\n\r\nconst divideandconquer =  async (board, curmove, lastmove, updateBoard, moveKnight, speed, iterate, updateSpeed) => {\r\n  await setTimeout(async () => {\r\n      \r\n    if (curmove[0] === 0 && curmove[1] === 1) return true;\r\n    \r\n    iterate() \r\n    let curBoard = board;\r\n    curBoard[curmove[0]][curmove[1]] = 1\r\n\r\n    const nextmove = getNextPoint(curmove[0], curmove[1], lastmove[0], lastmove[1])\r\n    curBoard[nextmove[0]][nextmove[1]] = 1\r\n    moveKnight(nextmove)\r\n    updateBoard(curBoard)\r\n\r\n  console.log(curBoard)\r\n\r\n    if (divideandconquer(curBoard, nextmove, curmove, updateBoard, moveKnight, speed, iterate, updateSpeed)) { return true }\r\n\r\n    return false\r\n  }, speed)\r\n}\r\n\r\nexport default divideandconquer\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { moveKnight, updateBoard } from '../store/board';\r\nimport backtrack from '../algorithms/backtracking';\r\nimport warnsdorf from '../algorithms/warnsdorf';\r\nimport divideandconquer from '../algorithms/divideandconquer';\r\n\r\nclass Board extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      iter: 0,\r\n      speed: 80,\r\n      start: [[0,0]]\r\n    };\r\n\r\n    this.backtrack = backtrack.bind(this);\r\n    this.warnsdorf = warnsdorf.bind(this);\r\n    this.iterate = this.iterate.bind(this)\r\n    this.divideandconquer = divideandconquer.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ speed: e.target.value });\r\n  }\r\n\r\n  iterate() {\r\n      this.setState({ iter:  this.state.iter + 1 })\r\n  }\r\n\r\n  updateSpeed() {\r\n      return this.state.speed;\r\n  }\r\n\r\n  renderSquare(i) {\r\n    let x = i % 12;\r\n    let y = Math.floor(i / 12);\r\n    let black = (x + y) % 2 === 1;\r\n    let knight;\r\n    let visited;\r\n    if (this.props.knight) {\r\n      knight = this.props.knight[0] === x && this.props.knight[1] === y;\r\n    }\r\n    if (this.props.board) {\r\n      visited = this.props.board[y][x] === 1;\r\n    }\r\n\r\n    return knight ? (\r\n      black ? (\r\n        <div key={i} className=\"black square knight\" />\r\n      ) : (\r\n        <div key={i} className=\"white square knight\" />\r\n      )\r\n    ) : black ? (\r\n      visited ? (\r\n        <div key={i} className=\"black square visited\" />\r\n      ) : (\r\n        <div key={i} className=\"black square\" />\r\n      )\r\n    ) : visited ? (\r\n      <div key={i} className=\"white square visited\" />\r\n    ) : (\r\n      <div key={i} className=\"white square\" />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let squares = [];\r\n\r\n    for (let i = 0; i < 144; i++) {\r\n      squares.push(this.renderSquare(i));\r\n    }\r\n    return (\r\n      <div id=\"main\" >\r\n          <div id=\"img\">\r\n              <img className=\"img\" alt=\"knight\" src=\"https://i.imgur.com/rDN4qFr.jpg\" />\r\n          </div>\r\n          <div className=\"middle\">\r\n      <div id=\"title\">\r\n        <h1>Knight's Tour</h1>\r\n        <p>By <a href=\"http://matthewhowe.net\">Matthew Howe</a></p>\r\n      </div>\r\n        <div id=\"board\">{squares}</div>\r\n    </div>\r\n        <div id=\"buttons\">\r\n          <button\r\n            onClick={() =>\r\n              this.backtrack(\r\n                this.props.board,\r\n                this.state.start,\r\n                this.props.updateBoard,\r\n                this.props.moveKnight,\r\n                this.state.speed,\r\n                this.iterate,\r\n                this.updateSpeed\r\n              ) \r\n            }\r\n            id=\"b4\"\r\n          >\r\n            Brute Force Iterations\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              this.warnsdorf(\r\n                this.props.board,\r\n                this.state.start,\r\n                this.props.updateBoard,\r\n                this.props.moveKnight,\r\n                this.state.speed,\r\n                this.iterate\r\n              )\r\n            }\r\n            id=\"b3\"\r\n          >\r\n            Warnsdorf's Rule\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              this.divideandconquer(\r\n                this.props.board,\r\n                [2,0],\r\n                [0,1],\r\n                this.props.updateBoard,\r\n                this.props.moveKnight,\r\n                this.state.speed,\r\n                this.iterate\r\n              )\r\n            }\r\n            id=\"b3\"\r\n          >\r\n            Divide and Conquer\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              alert('coming soon!')\r\n            }\r\n            id=\"b3\"\r\n          >\r\n              Neural Network Solution\r\n          </button>\r\n          <div />\r\n          <div>\r\n            <p className=\"speed-text\">Speed: {this.state.speed} ms</p>\r\n            <input\r\n              name=\"speed\"\r\n              onChange={e => {\r\n                this.handleChange(e);\r\n              }}\r\n              type=\"range\"\r\n              min=\"10\"\r\n              max=\"500\"\r\n              value={this.state.speed}\r\n              className=\"slider\"\r\n            />\r\n          </div>\r\n          <p className=\"iterations\">Iterations: {this.state.iter}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  board: state.board.board,\r\n  knight: state.board.knight,\r\n  iterations: state.board.iterations,\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  moveKnight: knight => dispatch(moveKnight(knight)),\r\n  updateBoard: newBoard => dispatch(updateBoard(newBoard)),\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Board);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Board from './components/Board';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className='app'>\r\n      <div>\r\n        <Board />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const RUN_SCRIPT = \"RUN_SCRIPT\"\r\nconst CHANGE_SPEED = \"CHANGE_SPEED\"\r\nconst MODULATE_SPEED = \"MODULATE_SPEED\"\r\nconst UPDATE_TEMP = \"UPDATE_TEMP\"\r\n\r\nexport const runScript = script => ({\r\n  type: RUN_SCRIPT,\r\n  script: script\r\n})\r\n\r\nexport const changeSpeed = newSpeed => ({\r\n  type: CHANGE_SPEED,\r\n  newSpeed: newSpeed\r\n})\r\n\r\nexport const modulateSpeed = newSpeed => ({\r\n  type: MODULATE_SPEED,\r\n  newSpeed: newSpeed\r\n})\r\n\r\nexport const updateTemp = newTemp => ({\r\n  type: UPDATE_TEMP,\r\n  newTemp: newTemp\r\n})\r\n\r\nconst initialState = {\r\n  script: null,\r\n  speed: 80,\r\n  temp: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"RUN_SCRIPT\":\r\n      return Object.assign({}, state, {script: action.script})\r\n    case \"CHANGE_SPEED\":\r\n      return Object.assign({}, state, {speed: action.newSpeed})\r\n    case \"MODULATE_SPEED\":\r\n      return Object.assign({}, state, {speed: action.newSpeed})\r\n    case \"UPDATE_TEMP\":\r\n      return Object.assign({}, state, {temp: action.newTemp})\r\n    default:\r\n      return initialState\r\n  }\r\n}\r\n  \r\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {createLogger} from 'redux-logger'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport board from './board'\r\nimport algorithm from './algorithm'\r\n\r\nconst reducer = combineReducers({board, algorithm})\r\nconst middleware = composeWithDevTools(\r\n  applyMiddleware(createLogger({collapsed: true}))\r\n)\r\nconst store = createStore(reducer, middleware)\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}