{"version":3,"sources":["queue/action-queue.js","utils/utils.js","algorithms/backtracking.js","algorithms/warnsdorf.js","algorithms/divideandconquer.js","store/board.js","components/Board.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["queue","interval","lastTick","tickInterval","actionQueue","fn","push","shift","setImmediate","speed","setInterval","this","processQueue","eraseTicker","clearInterval","initInterval","clearQueueInterval","Date","now","initTickInterval","tick","bind","util","pos","filter","move","board","moves","length","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","count","findMoves","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","validMove","err","return","num","backtrack","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","updateBoard","moveKnight","iterate","updateSpeed","wrap","_context2","prev","setTimeout","_callee","curBoard","curPosition","possibleMoves","moveIdx","curMove","row","column","_context","boardVisited","abrupt","shuffle","console","log","stop","_x","_x2","_x3","_x4","_x5","_x6","_x7","apply","arguments","warnsdorf","addMove","lastMove","bestMove","bestCount","boardVisitedWarnsdorf","Infinity","numOfEmpty","t0","finish","enqueue","alert","getNextPoint","x","y","lastX","lastY","nextX","nextY","offsetTypeOriginArr","offsetTypeSubstituteArr","offsetDirArr","_getPossibleNextPoint3","_getPossibleNextPoint","_getPointGridAttribut","blkChoiceX","blkChoiceY","gridSizeX","gridSizeY","gridLocX","gridLocY","pointAttribute","halve","mod_","left","right","getPointGridAttribute","_getPointGridAttribut2","slicedToArray","shouldReverse","t","p","next_a_offsetType","next_b_offsetType","pathOrigin","pathSubstitute","getPossibleNextPointOffsetType","_getPossibleNextPoint2","p_a","p_b","getPossibleNextPoint","_getPossibleNextPoint4","next_a_x_p","next_a_y_p","next_b_x_p","next_b_y_p","divideandconquer","curmove","lastmove","updateCurmove","updateLastmove","nextmove","_x8","initialState","_initialState","knight","defineProperty","Board","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","start","assertThisInitialized","e","modulateSpeed","target","props","changeSpeed","setState","algo","clear","startQueueing","i","visited","black","react_default","createElement","key","className","_this2","squares","renderSquare","id","href","onClick","run","name","onChange","handleChange","type","min","max","iterations","Component","connect","dispatch","newBoard","runScript","App","components_Board","Boolean","window","location","hostname","match","reducer","combineReducers","action","assign","concat","toConsumableArray","middleware","composeWithDevTools","applyMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uHAAIA,EAAQ,GACRC,EAAW,KACXC,EAAW,KACXC,EAAe,KAoEbC,EAAc,uGA/DlB,OAAOJ,kCAGAK,GACPL,EAAMM,KAAKD,0CAIX,IAAIA,EAAKL,EAAMO,QACXF,GAAIG,EAAaH,wCAGTI,GACZR,EAAWS,YAAYC,KAAKC,aAAcH,GAC1CE,KAAKE,oDAILX,EAAW,KACXY,cAAcX,GACdA,EAAe,2CAGFM,GACbE,KAAKI,aAAaN,GAClBE,KAAKC,4DAILE,cAAcb,GACdA,EAAW,qCAIXU,KAAKK,qBACLhB,EAAQ,yCAGKS,GACbP,EAAWA,GAAYe,KAAKC,MAC5BJ,cAAcX,GACdQ,KAAKQ,iBAAiBV,4CAGNA,GAChBN,EAAeO,YAAYC,KAAKS,KAAKC,KAAK,KAAMZ,GAAQ,gCAGpDA,GACgBQ,KAAKC,MACzBhB,EAAWe,KAAKC,MAChBP,KAAKC,mDAGMH,GACXE,KAAKK,qBACLL,KAAKE,cACLF,KAAKI,aAAaN,aAOLL,gRCWAkB,EADJ,sGAhFGC,GAkBN,MAbe,CACX,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,GACtB,CAACA,EAAI,GAAK,EAAGA,EAAI,GAAK,IAEFC,OAAO,SAAAC,GAC3B,OAAOA,EAAK,IAAM,GAAKA,EAAK,IAAM,GAAKA,EAAK,GAAK,IAAMA,EAAK,GAAK,uCAM/DC,EAAOH,GAGb,OAAiC,IAA1BG,EAAMH,EAAI,IAAIA,EAAI,yCAIhBI,GAET,OAAwB,MAAjBA,EAAMC,qDAGKD,GAElB,OAAwB,MAAjBA,EAAMC,uCAITC,GAOJ,IALA,IACIC,EACAC,EAFAC,EAAeH,EAAMD,OAKlB,IAAMI,GAETD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWH,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGzB,OAAOD,qCAGCH,EAAOH,GACf,IAAIa,EAAQ,EACRT,EAAQhB,KAAK0B,UAAUd,GAFNe,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIrB,QAAAC,EAAAC,EAAmBhB,EAAnBiB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA0B,KAAfb,EAAeiB,EAAAM,MAClBrC,KAAKsC,UAAUvB,EAAOD,IAAOW,KALhB,MAAAc,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAQrB,OAAOJ,yCAGIgB,GAGX,MAAO,CADCA,EAAM,GADNnB,KAAKC,MAAMkB,EAAM,eClE3BC,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAChBlC,EACAC,EACAkC,EACAC,EACArD,EACAsD,EACAC,GAPgB,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAApB,MAAA,OAShBsB,WAAUb,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAU,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnB,EAAAC,EAAAO,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAA/B,MAAA,UACTiB,KACIO,EAAW5C,GACN,GAAG,GAAK,GAEbJ,EAAKwD,aAAanD,GALb,CAAAkD,EAAA/B,KAAA,eAAA+B,EAAAE,OAAA,UAK4B,GAL5B,OAOHR,EAAc5C,EAAMA,EAAMC,OAAS,GACrC4C,EAAgBlD,EAAKe,UAAUkC,GACnCC,EAAgBlD,EAAK0D,QAAQR,GAEpBC,EAAU,EAXV,YAWaA,EAAUD,EAAc5C,QAXrC,CAAAiD,EAAA/B,KAAA,YAYD4B,EAAUF,EAAcC,IAC1BnD,EAAK2B,UAAUqB,EAAUI,GAbtB,CAAAG,EAAA/B,KAAA,YAcLnB,EAAMrB,KAAKoE,GACPC,EAAMD,EAAQ,GACdE,EAASF,EAAQ,GAErBJ,EAASK,GAAKC,GAAU,EAExBd,EAAWY,GACXb,EAAYS,IAEVjB,EAAUiB,EAAU3C,EAAOkC,EAAaC,EAAYrD,EAAOsD,GAvBxD,CAAAc,EAAA/B,KAAA,gBAAA+B,EAAAE,OAAA,UAyBI,GAzBJ,QAW6CN,IAX7CI,EAAA/B,KAAA,gBA8BTmC,QAAQC,IAAI,QAAS,cAAgBvD,EAAMA,EAAMC,OAAS,IA9BjD,yBAAAiD,EAAAM,SAAAd,MA+BR,IAxCa,wBAAAH,EAAAiB,SAAAvB,MAAH,gBAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAApC,EAAAqC,MAAAhF,KAAAiF,YAAA,GA2CAvC,WC7CTwC,EAAS,eAAAvC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAU,EAChB3C,EACAC,EACAkC,EACAC,EACAgC,EACA/B,GANgB,IAAAO,EAAAyB,EAAAvB,EAAAwB,EAAAC,EAAA3D,EAAAC,EAAAC,EAAAG,EAAAD,EAAAjB,EAAAW,EAAAuC,EAAAC,EAAA,OAAAnB,EAAAC,EAAAO,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAA/B,MAAA,UAQZwB,EAAW5C,IAEXtB,IAAYwB,OAAS,KAVT,CAAAiD,EAAA/B,KAAA,eAWdmC,QAAQC,IAAI,gBAXEL,EAAAE,OAAA,UAYP,GAZO,WAcZzD,EAAK4E,sBAAsBvE,GAdf,CAAAkD,EAAA/B,KAAA,eAedmC,QAAQC,IAAI,gBAfEL,EAAAE,OAAA,UAgBP,GAhBO,OA4BhB,IAVMgB,EAAWpE,EAAMA,EAAMC,OAAS,GACK,IAAvC0C,EAASyB,EAAS,IAAIA,EAAS,MACjCzB,EAASyB,EAAS,IAAIA,EAAS,IAAM,GAGvCd,QAAQC,IAAI,aAAca,GACtBvB,EAAgBlD,EAAKe,UAAU0D,GAG/BE,EAAYE,IA3BA7D,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAAoC,EAAAV,KAAA,GA4BhBxB,EAAmB6B,EAAnB5B,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAWb,EAAuBiB,EAAAM,OAC1BZ,EAAQd,EAAK8E,WAAW9B,EAAU7C,IAC5BwE,GAAa3E,EAAK2B,UAAUqB,EAAU7C,KAChDwE,EAAY7D,EACZ4D,EAAWvE,GAhCCoD,EAAA/B,KAAA,iBAAA+B,EAAAV,KAAA,GAAAU,EAAAwB,GAAAxB,EAAA,UAAAtC,GAAA,EAAAC,EAAAqC,EAAAwB,GAAA,QAAAxB,EAAAV,KAAA,GAAAU,EAAAV,KAAA,GAAA7B,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAA0B,EAAAV,KAAA,IAAA5B,EAAA,CAAAsC,EAAA/B,KAAA,eAAAN,EAAA,eAAAqC,EAAAyB,OAAA,mBAAAzB,EAAAyB,OAAA,eAqCXN,EArCW,CAAAnB,EAAA/B,KAAA,gBAAA+B,EAAAE,OAAA,0BAwCItC,IAAhBuD,EAAS,SAAoCvD,IAAhBuD,EAAS,GAxC1B,CAAAnB,EAAA/B,KAAA,YAyCV6B,EAAMqB,EAAS,GACfpB,EAASoB,EAAS,GAGtB5F,IAAYmG,QAAQ,WAClBT,EAAQE,GACRlC,EAAWkC,GACXnC,EAAYS,GACZP,MAGFO,EAASK,GAAKC,GAAU,EACxBjD,EAAMrB,KAAK0F,IAEPH,EAAUvB,EAAU3C,EAAOkC,EAAaC,EAAYgC,EAAS/B,GAvDnD,CAAAc,EAAA/B,KAAA,gBAAA+B,EAAAE,OAAA,UAwDL,GAxDK,eAAAF,EAAAE,OAAA,UAyDA,GAzDA,QAAAF,EAAA/B,KAAA,wBA2Dd0D,MAAM,2CA3DQ3B,EAAAE,OAAA,UA4DP,GA5DO,yBAAAF,EAAAM,SAAAd,EAAA,qCAAH,gBAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAnC,EAAAqC,MAAAhF,KAAAiF,YAAA,GAgEAC,YChEf,SAASY,EAAaC,EAAGC,EAAGC,EAAOC,GAEjC,IA8IIC,EAAOC,EA9ILC,EAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5CC,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChDC,EAAe,CACnB,EAAE,GAAI,GAAI,EAAE,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,EAAE,EAAG,IAL9B,IAAAC,EA6HxC,SAA8BT,EAAGC,GAAG,IAAAS,EArDpC,SAAwCV,EAAGC,GACzC,IAD4CU,EA7D9C,SAA+BX,EAAGC,GAEhC,IAIIW,EAAYC,EAJZC,EAAY,GACZC,EAAY,GACZC,EAAWhB,EACXiB,EAAWhB,EAGXiB,EAAiB,EAErB,EAAG,CAED,IAAIC,EAAQL,EAAY,EACpBM,EAAOD,EAAQ,EACfE,EAAOF,EAAQC,EACfE,EAAQH,EAAQC,EAEhBJ,EAAWK,GACbP,EAAYO,EACZT,EAAa,IAEbE,EAAYQ,EACZN,GAAYM,EACZV,EAAa,GAOfU,GAHAH,EAAQJ,EAAY,IACpBK,EAAOD,EAAQ,GAIXF,GAHJI,EAAOF,EAAQC,IAIbL,EAAYM,EACZR,EAAa,IAEbE,EAAYO,EACZL,GAAYI,EACZR,EAAa,GAIjBK,EACiB,IAAfN,GAAmC,IAAfC,GAAoBG,IAAaF,EAAY,GAAKG,IAAaF,EAAY,EAAI,EACpF,IAAfH,GAAmC,IAAfC,GAAoBG,IAAaF,EAAY,GAAKG,IAAaF,EAAY,EAAI,EACxE,IAAfH,GAAmC,IAAfC,GAAiC,IAAbG,GAAkBC,IAAaF,EAAY,EAAI,EACxE,IAAfH,GAAmC,IAAfC,GAAiC,IAAbG,GAAkBC,IAAaF,EAAY,EAAI,EAC5D,IAAfH,GAAmC,IAAfC,GAAiC,IAAbG,GAA+B,IAAbC,EAAiB,EAC5D,IAAfL,GAAmC,IAAfC,GAAiC,IAAbG,GAA+B,IAAbC,EAAiB,EACxE,IAAfL,GAAmC,IAAfC,GAAoBG,IAAaF,EAAY,GAAkB,IAAbG,EAAiB,EACxE,IAAfL,GAAmC,IAAfC,GAAoBG,IAAaF,EAAY,GAAkB,IAAbG,EAAiB,EAAIC,UAG7FJ,GAAa,IAAMC,GAAa,KACnCD,EAAY,IAAMC,EAAY,MAEvC,MAAO,CAACD,EAAWC,EAAWC,EAAUC,EAAUC,GAgBeK,CAAsBvB,EAAGC,GAX9CuB,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAA8D,EAAA,GAWvCG,EAXuCU,EAAA,GAW5BT,EAX4BS,EAAA,GAWjBR,EAXiBQ,EAAA,GAWPP,EAXOO,EAAA,GAWGN,EAXHM,EAAA,GAatCE,EAAgBZ,EAAYC,EAElC,GAAIW,EAAe,CAEjB,IAAIC,EAAIb,EACRA,EAAYC,EACZA,EAAYY,EAGZA,EAAIX,EACJA,EAAWC,EACXA,EAAWU,EAGb,IAAMC,EAzBN,CACE,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAC7C,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAmB7BX,GAAUD,GACxBa,EAAoBD,EAAE,GACtBE,EAAoBF,EAAE,GAO1B,GALIF,IACFG,GAAqB,EAAIA,GAAqB,EAC9CC,GAAqB,EAAIA,GAAqB,GAGzB,IAAnBZ,EAAsB,CACxB,IAAIa,EAAazB,EAAoBY,GACjCc,EAAiBzB,EAAwBW,GACzCW,IAAsBE,EACxBF,EAAoBG,EACXF,IAAsBC,EAC/BD,EAAoBE,EAEpBzD,QAAQC,IAAI,wEAKhB,MAAO,CAACsC,EAAWC,EAAWC,EAAUC,EACtCC,EAAgBU,EAAGC,EAAmBC,GAOtCG,CAA+BjC,EAAGC,GAJFiC,EAAArF,OAAA4E,EAAA,EAAA5E,CAAA6D,EAAA,GAGbmB,GAHaK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGMJ,EAHNI,EAAA,GAM9BC,EAAM3B,EAAaqB,GACnBO,EAAM5B,EAAasB,GAQvB,MAAO,CAACM,EAPSpC,EAAImC,EAAI,GACRlC,EAAIkC,EAAI,GACRnC,EAAIoC,EAAI,GACRnC,EAAImC,EAAI,IAWzBC,CAAqBrC,EAAGC,GAnJcqC,EAAAzF,OAAA4E,EAAA,EAAA5E,CAAA4D,EAAA,GAkJ9B8B,GAlJ8BD,EAAA,GAAAA,EAAA,IAkJlBE,EAlJkBF,EAAA,GAkJNG,EAlJMH,EAAA,GAkJMI,EAlJNJ,EAAA,GA+JxC,OAVIC,IAAerC,GAASsC,IAAerC,GACzCC,EAAQqC,EACRpC,EAAQqC,GACCD,IAAevC,GAASwC,IAAevC,GAChDC,EAAQmC,EACRlC,EAAQmC,GACDjE,QAAQC,IAAI,+DAErBD,QAAQC,IAAI,KAAK,UAAW0B,EAAO,UAAWC,EAAO,MACrD5B,QAAQC,IAAI,KAAK,UAAW4B,EAAM,UAAUC,EAAM,MAC3C,CAACD,EAAOC,GAqBjB,MAEMsC,EAAgB,eAAA/F,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAU,EACvB3C,EACA4H,EACAC,EACA1F,EACAC,EACA0F,EACGC,EACA1F,GARoB,IAAAO,EAAAoF,EAAA,OAAAjG,EAAAC,EAAAO,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAA/B,MAAA,YAUpB1C,IAAYwB,OAAS,KAVD,CAAAiD,EAAA/B,KAAA,eAWvBmC,QAAQC,IAAI,mBAXWL,EAAAE,OAAA,oBAcH,IAAfuE,EAAQ,IAA2B,IAAfA,EAAQ,GAdV,CAAAzE,EAAA/B,KAAA,eAetBmC,QAAQC,IAAI,mBAfUL,EAAAE,OAAA,qBAkBlBT,EAAW5C,GACN4H,EAAQ,IAAIA,EAAQ,IAAM,EAE7BI,EAAWjD,EAAa6C,EAAQ,GAAIA,EAAQ,GAAIC,EAAS,GAAIA,EAAS,IAC7B,IAAvCjF,EAASiF,EAAS,IAAIA,EAAS,MACnCjF,EAASiF,EAAS,IAAIA,EAAS,IAAM,GAG3CnJ,IAAYmG,QAAQ,WAChBxC,IACHD,EAAW4F,GACR7F,EAAYS,KAIhBA,EAASoF,EAAS,IAAIA,EAAS,IAAM,GAEjCL,EACH/E,EACAoF,EAAUJ,EAASzF,EAAaC,EAChC0F,EAAeC,EAAgB1F,GAtCR,CAAAc,EAAA/B,KAAA,gBAAA+B,EAAAE,OAAA,UAuCd,GAvCc,eAAAF,EAAAE,OAAA,UAwCZ,GAxCY,yBAAAF,EAAAM,SAAAd,MAAJ,gBAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiE,GAAA,OAAArG,EAAAqC,MAAAhF,KAAAiF,YAAA,GA4CPyD,ICzJTO,GAAYC,EAAA,CAChBC,OAAQ,CAAC,EAAG,GACZ/D,SAAU,CAAC,EAAG,GACdpE,MAAO,CAAC,CAAC,EAAE,IACX+C,QAAS,CAAC,EAAG,IAJGnB,OAAAwG,EAAA,EAAAxG,CAAAsG,EAAA,WAKN,CAAC,EAAG,IALEtG,OAAAwG,EAAA,EAAAxG,CAAAsG,EAAA,QAMT,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAlBpBtG,OAAAwG,EAAA,EAAAxG,CAAAsG,EAAA,aAoBJ,GApBItG,OAAAwG,EAAA,EAAAxG,CAAAsG,EAAA,UAqBP,IArBOtG,OAAAwG,EAAA,EAAAxG,CAAAsG,EAAA,QAsBT,IAtBSA,GCxEZG,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAA1G,OAAA2G,EAAA,EAAA3G,CAAA5C,KAAAqJ,IACZC,EAAA1G,OAAA4G,EAAA,EAAA5G,CAAA5C,KAAA4C,OAAA6G,EAAA,EAAA7G,CAAAyG,GAAAK,KAAA1J,QACK2J,MAAQ,CACX7J,MAAO,GACP8J,MAAO,CAAC,CAAC,EAAG,IACZ7F,QAAS,CAAC,EAAE,GACZqB,SAAU,CAAC,EAAE,IAGfkE,EAAK5G,UAAYA,EAAUhC,KAAVkC,OAAAiH,EAAA,EAAAjH,CAAA0G,IACjBA,EAAKpE,UAAYA,EAAUxE,KAAVkC,OAAAiH,EAAA,EAAAjH,CAAA0G,IACjBA,EAAKZ,iBAAmBA,EAAiBhI,KAAjBkC,OAAAiH,EAAA,EAAAjH,CAAA0G,IAXZA,4EAcDQ,GAEZrK,IAAYY,qBACZZ,IAAYsK,cAAcD,EAAEE,OAAO3H,OAEnCrC,KAAKiK,MAAMC,YAAYJ,EAAEE,OAAO3H,OAChCrC,KAAKmK,SAAS,CAACrK,MAAOgK,EAAEE,OAAO3H,QAE/B5C,IAAYyK,YAAYJ,EAAEE,OAAO3H,mCAG/B+H,GACF3K,IAAY4K,QAoBbrK,KAAKiK,MAAMpB,cAJG,CAAC,EAAE,IAKjB7I,KAAKiK,MAAMnB,eAJI,CAAC,EAAE,IAKlB9I,KAAKiK,MAAM/G,YArBE,CACX,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAUpClD,KAAKiK,MAAM9G,WAAW,CAAC,EAAE,IAGvBmB,QAAQC,IAAIvE,KAAKiK,MAAM7G,SACvBkB,QAAQC,IAAIvE,KAAKiK,MAAM9E,SAEZ,cAATiF,EACHlF,EAAUlF,KAAKiK,MAAMlJ,MAAOf,KAAKiK,MAAMjJ,MAAOhB,KAAKiK,MAAM/G,YACxDlD,KAAKiK,MAAM9G,WAAYnD,KAAKiK,MAAM9E,QAASnF,KAAKiK,MAAM7G,SAEvDsF,EAAiB1I,KAAKiK,MAAMlJ,MAAOf,KAAKiK,MAAMlG,QAAS/D,KAAKiK,MAAM7E,SAC3DpF,KAAKiK,MAAM/G,YAAalD,KAAKiK,MAAM9G,WAAYnD,KAAKiK,MAAMpB,cAAe7I,KAAKiK,MAAMnB,eAAgB9I,KAAKiK,MAAM7G,SAEvH3D,IAAY6K,cAActK,KAAKiK,MAAMnK,4CAIxByK,GACX,IAGIpB,EACAqB,EAJAzE,EAAIwE,EAAI,GACRvE,EAAI1E,KAAKC,MAAMgJ,EAAI,IACnBE,GAAS1E,EAAIC,GAAK,IAAM,EAU5B,OAPIhG,KAAKiK,MAAMd,SACbA,EAASnJ,KAAKiK,MAAMd,OAAO,KAAOpD,GAAK/F,KAAKiK,MAAMd,OAAO,KAAOnD,GAE9DhG,KAAKiK,MAAMlJ,QACbyJ,EAAqC,IAA3BxK,KAAKiK,MAAMlJ,MAAMiF,GAAGD,IAGzBoD,EACLsB,EACEC,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,wBAEvBH,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,wBAEvBJ,EACFD,EACEE,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,kBAEvBH,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,iBAEvBL,EACFE,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,kBAEvBH,EAAA3H,EAAA4H,cAAA,OAAKC,IAAKL,EAAGM,UAAU,kDAOzB,IAHO,IAAAC,EAAA9K,KACH+K,EAAU,GAELR,EAAI,EAAGA,EAAI,IAAKA,IACvBQ,EAAQpL,KAAKK,KAAKgL,aAAaT,IAEjC,OACEG,EAAA3H,EAAA4H,cAAA,OAAKM,GAAG,QACNP,EAAA3H,EAAA4H,cAAA,OAAKM,GAAG,QAERP,EAAA3H,EAAA4H,cAAA,OAAKE,UAAU,UACbH,EAAA3H,EAAA4H,cAAA,OAAKM,GAAG,SACNP,EAAA3H,EAAA4H,cAAA,2BACAD,EAAA3H,EAAA4H,cAAA,eACKD,EAAA3H,EAAA4H,cAAA,KAAGO,KAAK,qBAAR,kBAGPR,EAAA3H,EAAA4H,cAAA,OAAKM,GAAG,SAASF,IAEnBL,EAAA3H,EAAA4H,cAAA,OAAKM,GAAG,WACNP,EAAA3H,EAAA4H,cAAA,UAAQQ,QAAS,kBAAML,EAAKM,IAAI,cAAcH,GAAG,MAAjD,oBAGAP,EAAA3H,EAAA4H,cAAA,UACEQ,QAAS,kBAAML,EAAKM,OACpBH,GAAG,MAFL,sBAKAP,EAAA3H,EAAA4H,cAAA,UAAQQ,QAAS,kBAAML,EAAKM,OAAOH,GAAG,MAAtC,2BAGAP,EAAA3H,EAAA4H,cAAA,YACAD,EAAA3H,EAAA4H,cAAA,WACED,EAAA3H,EAAA4H,cAAA,KAAGE,UAAU,cAAb,UAAkC7K,KAAK2J,MAAM7J,MAA7C,OACA4K,EAAA3H,EAAA4H,cAAA,SACEU,KAAK,QACLC,SAAU,SAAAxB,GACRgB,EAAKS,aAAazB,IAEpB0B,KAAK,QACLC,IAAI,KACJC,IAAI,MACJrJ,MAAOrC,KAAK2J,MAAM7J,MAClB+K,UAAU,YAGdH,EAAA3H,EAAA4H,cAAA,KAAGE,UAAU,cAAb,eAAuC7K,KAAKiK,MAAM0B,qBAjJxCC,aA6KLC,cArBE,SAAAlC,GAAK,MAAK,CAC1BvE,SAAUuE,EAAM5I,MAAMqE,SACtBpE,MAAO2I,EAAM5I,MAAMC,MACnB+C,QAAS4F,EAAM5I,MAAMgD,QACpBhD,MAAO4I,EAAM5I,MAAMA,MACnBoI,OAAQQ,EAAM5I,MAAMoI,OACpBwC,WAAYhC,EAAM5I,MAAM4K,WACzB7L,MAAO6J,EAAM5I,MAAMjB,QAGA,SAAAgM,GAAQ,MAAK,CAC/B3I,WAAY,SAAAgG,GAAM,OAAI2C,EDxJE,SAAA3C,GAAM,MAAK,CACnCqC,KAfkB,cAgBlBrC,OAAQA,GCsJuBhG,CAAWgG,KAC1CjG,YAAa,SAAA6I,GAAQ,OAAID,EDpJU,CACnCN,KAnBmB,eAoBnBzK,MCkJ8CgL,KAC9CC,UAAW,kBAAMF,EDxIa,CAC/BN,KA9BkB,gBCsKjBrG,QAAS,SAAArE,GAAI,OAAIgL,ED3HI,SAAChL,GAAD,MAAW,CACjC0K,KAvCgB,WAwChB1K,QCyH2BqE,CAAQrE,KAClC+H,cAAe,SAAA/H,GAAI,OAAIgL,EDlHI,SAAChL,GAAD,MAAW,CACvC0K,KAhDsB,iBAiDtB1K,QCgHiC+H,CAAc/H,KAC9CgI,eAAgB,SAAAhI,GAAI,OAAIgL,ED9GI,SAAChL,GAAD,MAAW,CACxC0K,KApDuB,kBAqDvB1K,QC4GkCgI,CAAehI,KAChDoJ,YAAa,SAAApK,GAAK,OAAIgM,EDzHG,SAAAhM,GAAK,MAAK,CACnC0L,KA/CmB,eAgDnB1L,SCuH+BoK,CAAYpK,KAC3CsD,QAAS,kBAAM0I,ED3Ga,CAC7BN,KAxDe,eCqKDK,CAA+BxC,GCtK/B4C,MAXf,WACE,OAEEvB,EAAA3H,EAAA4H,cAAA,OAAKE,UAAU,OACbH,EAAA3H,EAAA4H,cAAA,WACED,EAAA3H,EAAA4H,cAACuB,EAAD,SCGYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,sFCbAC,EAAUC,0BAAgB,CAAC1L,MJoGlB,WAAuC,IAA9B4I,EAA8B1E,UAAAhE,OAAA,QAAAa,IAAAmD,UAAA,GAAAA,UAAA,GAAtBgE,EAAcyD,EAAQzH,UAAAhE,OAAA,EAAAgE,UAAA,QAAAnD,EACpD,OAAQ4K,EAAOlB,MACf,IAjGmB,eAkGlB,OAAO5I,OAAO+J,OAAO,GAAIhD,EAAO,CAC/B7J,MAAO4M,EAAO5M,QAEd,IA1GgB,cA2Gd,OAAO8C,OAAO+J,OAAO,GAAIhD,EAAO,CAC9BR,OAAQ,CAACuD,EAAOvD,OAAO,GAAIuD,EAAOvD,OAAO,MAG7C,IA9GiB,eA+Gf,OAAOvG,OAAO+J,OAAO,GAAIhD,EAAO,CAAC5I,MAAO2L,EAAO3L,QAEjD,IAhHY,UAiHV8E,MAAM,wDACN,MAEF,IAnHe,aAuHf,IAtHgB,cAwHd,OAAO8D,EAEX,IAnHc,UAoHb,OAAO/G,OAAO+J,OAAO,GAAIhD,EAAO,CAC/BgC,WAAYhC,EAAMgC,WAAa,IAGjC,IA3He,WA4Hd,OAAO/I,OAAO+J,OAAO,GAAIhD,EAAO,CAC/B3I,MAAK,GAAA4L,OAAAhK,OAAAiK,EAAA,EAAAjK,CAAM+G,EAAM3I,OAAZ,CAAmB0L,EAAO5L,SAGjC,IA/HqB,iBAgIpB,OAAO8B,OAAO+J,OAAO,GAAIhD,EAAO,CAC/B5F,QAAS2I,EAAO5L,OAElB,IAlIsB,kBAmIrB,OAAO8B,OAAO+J,OAAO,GAAIhD,EAAO,CAC/BvE,SAAUsH,EAAO5L,OAGjB,QAEE,OADAwD,QAAQC,IAAI,wCACL0E,MIlJP6D,EAAaC,8BACjBC,0BAAgBC,uBAAa,CAACC,WAAW,MAI5BC,EAFDC,sBAAYZ,EAASM,GCFnCO,IAASC,OACP5C,EAAA3H,EAAA4H,cAAC4C,EAAA,EAAD,CAAUJ,MAAOA,GACfzC,EAAA3H,EAAA4H,cAAC6C,EAAD,OAEFC,SAASC,eAAe,SFsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.43498cec.chunk.js","sourcesContent":["let queue = []\r\nlet interval = null\r\nlet lastTick = null\r\nlet tickInterval = null\r\n\r\nclass ActionQueue {\r\n\r\n\tgetQueue() {\r\n\t\treturn queue;\r\n\t}\r\n\r\n\tenqueue(fn) {\r\n\t\tqueue.push(fn);\r\n\t}\r\n\t\r\n\tprocessQueue() {\r\n\t\tlet fn = queue.shift();\r\n\t\tif (fn) setImmediate(fn);\r\n\t}\r\n\r\n\tinitInterval(speed) {\r\n\t\tinterval = setInterval(this.processQueue, speed);\r\n\t\tthis.eraseTicker();\r\n\t}\r\n\r\n\teraseTicker() {\r\n\t\tlastTick = null;\r\n\t\tclearInterval(tickInterval);\r\n\t\ttickInterval = null;\r\n\t}\r\n\t\r\n\tstartQueueing(speed) {\r\n\t\tthis.initInterval(speed);\r\n\t\tthis.processQueue();\r\n\t}\r\n\t\r\n\tclearQueueInterval() {\r\n\t\tclearInterval(interval);\r\n\t\tinterval = null\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.clearQueueInterval();\r\n\t\tqueue = [];\r\n\t}\r\n\r\n\tmodulateSpeed(speed) {\r\n\t\tlastTick = lastTick || Date.now();\r\n\t\tclearInterval(tickInterval);\r\n\t\tthis.initTickInterval(speed);\r\n\t}\r\n\r\n\tinitTickInterval(speed) {\r\n\t\ttickInterval = setInterval(this.tick.bind(null, speed), 1);\r\n\t}\r\n\r\n\ttick(speed) {\r\n\t\tconst elapsedTime = Date.now() - lastTick;\r\n\t\tlastTick = Date.now();\r\n\t\tthis.processQueue();\r\n\t}\r\n\t\t\r\n\tchangeSpeed(speed) {\r\n\t\tthis.clearQueueInterval();\r\n\t\tthis.eraseTicker();\r\n\t\tthis.initInterval(speed);\r\n\t}\t\r\n\t\r\n}\r\n\r\n\r\nconst actionQueue = new ActionQueue()\r\nexport default actionQueue;\r\n","class utils {\r\n\r\n    findMoves(pos) {\r\n        // findmoves takes the [x, y] coordinates\r\n        // of the knight and returns an array of valid\r\n        // positions for the knight to move\r\n\r\n        let movesArr = [\r\n            [pos[0] - 1, pos[1] - 2],\r\n            [pos[0] - 2, pos[1] - 1],\r\n            [pos[0] + 1, pos[1] - 2],\r\n            [pos[0] + 2, pos[1] - 1],\r\n            [pos[0] - 2, pos[1] + 1],\r\n            [pos[0] - 1, pos[1] + 2],\r\n            [pos[0] + 1, pos[1] + 2],\r\n            [pos[0] + 2, pos[1] + 1],\r\n        ];\r\n        let posMoves = movesArr.filter(move => {\r\n            return move[0] >= 0 && move[1] >= 0 && move[0] < 12 && move[1] < 12;\r\n        });\r\n        return posMoves;\r\n    }\r\n\r\n    \r\n    validMove(board, pos) {\r\n        // validmove checks if the target square \r\n        // hasn't been visited yet\r\n        return board[pos[0]][pos[1]] !== 1;\r\n    }\r\n\r\n        \r\n    boardVisited(moves) {\r\n        // checks if every square has been visited\r\n        return moves.length === 143;\r\n    }\r\n\r\n    boardVisitedWarnsdorf(moves) {\r\n        // adjusted for warnsdorf's moves length\r\n        return moves.length === 143;\r\n    }\r\n\r\n\r\n    shuffle(array) {\r\n        // shuffling utility\r\n        var currentIndex = array.length,\r\n            temporaryValue,\r\n            randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n\r\n            // And swap it with the current element.\r\n            temporaryValue = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temporaryValue;\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    numOfEmpty( board, pos ) {\r\n        let count = 0;\r\n        let moves = this.findMoves(pos); \r\n\r\n        for (const move of moves) {\r\n            if (this.validMove(board, move)) count++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    mapNumToCoords(num) {\r\n        let y = Math.floor(num / 12);\r\n        let x = num % 12;\r\n        return [x, y]\r\n    }\r\n\r\n}\r\n\r\nlet util = new utils();\r\nexport default util;\r\n","import util from \"../utils/utils\";\r\n\r\n// @param {array[][]} board - 2d array of the board\r\n// @param {array[][] moves - 2d array of the moves so far\r\n// @param {object{}} updateBoard - function to update board state\r\n// @param {object{}} moveKnight - function to update knight state\r\n// @param {integer} speed - ms speed for each iteration\r\n// @param {void} iterate - function to change local iteration state\r\n// @param {object{}} updateSpeed - function to update speed state\r\nconst backtrack = async (\r\n  board,\r\n  moves,\r\n  updateBoard,\r\n  moveKnight,\r\n  speed,\r\n  iterate,\r\n  updateSpeed\r\n) => {\r\n  setTimeout(async () => {\r\n    iterate();\r\n    let curBoard = board;\r\n    curBoard[0][0] = 1;\r\n\r\n    if (util.boardVisited(moves)) return true;\r\n\r\n    const curPosition = moves[moves.length - 1];\r\n    let possibleMoves = util.findMoves(curPosition);\r\n    possibleMoves = util.shuffle(possibleMoves);\r\n\r\n    for (let moveIdx = 0; moveIdx < possibleMoves.length; moveIdx++) {\r\n      const curMove = possibleMoves[moveIdx];\r\n      if (util.validMove(curBoard, curMove)) {\r\n        moves.push(curMove);\r\n        let row = curMove[0];\r\n        let column = curMove[1];\r\n\r\n        curBoard[row][column] = 1;\r\n\r\n        moveKnight(curMove);\r\n        updateBoard(curBoard);\r\n        if (\r\n          backtrack(curBoard, moves, updateBoard, moveKnight, speed, iterate)\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"ended\", \"last move: \",  moves[moves.length - 1]);\r\n  }, 10);\r\n};\r\n\r\nexport default backtrack;\r\n","import util from \"../utils/utils\";\r\nimport actionQueue from \"../queue/action-queue\";\r\n\r\n// @param {array[][]} board - 2d array of the board\r\n// @param {array[][] moves - 2d array of the moves so far\r\n// @param {object{}} updateBoard - function to update board state\r\n// @param {object{}} moveKnight - function to update knight state\r\nconst warnsdorf = async (\r\n  board,\r\n  moves,\r\n  updateBoard,\r\n  moveKnight,\r\n  addMove,\r\n  iterate\r\n) => {\r\n  let curBoard = board;\r\n\r\n  if (actionQueue.length > 143) {\r\n    console.log(\"board toured\");\r\n    return true;\r\n  }\r\n  if (util.boardVisitedWarnsdorf(moves)) {\r\n    console.log(\"board toured\");\r\n    return true;\r\n  }\r\n  const lastMove = moves[moves.length - 1];\r\n  if (curBoard[lastMove[0]][lastMove[1]] === 0) {\r\n    curBoard[lastMove[0]][lastMove[1]] = 1;\r\n  }\r\n\r\n  console.log(\"lastMove: \", lastMove);\r\n  let possibleMoves = util.findMoves(lastMove);\r\n  // find the move with the most empty spaces\r\n  let bestMove;\r\n  let bestCount = Infinity;\r\n  for (const move of possibleMoves) {\r\n    const count = util.numOfEmpty(curBoard, move);\r\n    if (count < bestCount && util.validMove(curBoard, move)) {\r\n      bestCount = count;\r\n      bestMove = move;\r\n    }\r\n  }\r\n\r\n  // TODO: remove debug blocker\r\n  if (!bestMove) return;\r\n\r\n  // move the knight and update the board\r\n  if (bestMove[0] !== undefined && bestMove[1] !== undefined) {\r\n    let row = bestMove[0];\r\n    let column = bestMove[1];\r\n\r\n    // enqueue actions\r\n    actionQueue.enqueue(() => {\r\n      addMove(bestMove);\r\n      moveKnight(bestMove);\r\n      updateBoard(curBoard);\r\n      iterate();\r\n    });\r\n\r\n    curBoard[row][column] = 1;\r\n    moves.push(bestMove);\r\n\r\n    if (warnsdorf(curBoard, moves, updateBoard, moveKnight, addMove, iterate)) {\r\n      return true;\r\n    } else return false;\r\n  } else {\r\n    alert(\"failed to converge on correct solution!\");\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default warnsdorf;\r\n","import actionQueue from '../queue/action-queue'\r\n\r\n// returns the coordinates of the next move as an array [x, y]\r\n// @param {integer} x - x position of knight\r\n// @param {integer} y - y position of knight\r\n// @param {integer} lastX - last x position of knight\r\n// @param {integer} lastY - last y position of knight\r\nfunction getNextPoint(x, y, lastX, lastY) {\r\n  \r\n  const offsetTypeOriginArr = [3, 7, 6, 2, 7, 3, 2, 6]\r\n  const offsetTypeSubstituteArr = [4, 3, 7, 4, 0, 7, 3, 0]\r\n  const offsetDirArr = [\r\n    [-2, -1], [-1, -2], [1, -2], [2, -1], [2, 1], [1, 2], [-1, 2], [-2, 1]\r\n  ]\r\n\r\n  // returns [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute]\r\n  // @param {integer} x - x position of the knight\r\n  // @param {integer} y - y position of the knight\r\n  function getPointGridAttribute(x, y) {\r\n\r\n    let gridSizeX = 12;\r\n    let gridSizeY = 12;\r\n    let gridLocX = x;\r\n    let gridLocY = y;\r\n    let blkChoiceX, blkChoiceY;\r\n\r\n    let pointAttribute = 8;\r\n\r\n    do {\r\n      /* process x  */ \r\n      let halve = gridSizeX / 2\r\n      let mod_ = halve % 2\r\n      let left = halve - mod_\r\n      let right = halve + mod_\r\n\r\n      if (gridLocX < left) {\r\n        gridSizeX = left;\r\n        blkChoiceX = 1;\r\n      } else {\r\n        gridSizeX = right;\r\n        gridLocX -= right;\r\n        blkChoiceX = 2;\r\n      }\r\n\r\n      /* process y */\r\n      halve = gridSizeY / 2;\r\n      mod_ = halve % 2;\r\n      left = halve - mod_\r\n      right = halve + mod_\r\n\r\n      if (gridLocY < left) {\r\n        gridSizeY = left\r\n        blkChoiceY = 1;\r\n      } else {\r\n        gridSizeY = right;\r\n        gridLocY -= left;\r\n        blkChoiceY = 2;\r\n      }\r\n\r\n\r\n    pointAttribute =\r\n      blkChoiceX === 1 && blkChoiceY === 1 && gridLocX === gridSizeX - 3 && gridLocY === gridSizeY - 1 ? 0 :\r\n      blkChoiceX === 1 && blkChoiceY === 1 && gridLocX === gridSizeX - 1 && gridLocY === gridSizeY - 2 ? 1 :\r\n                  blkChoiceX === 2 && blkChoiceY === 1 && gridLocX === 1 && gridLocY === gridSizeY - 3 ? 2 :\r\n                  blkChoiceX === 2 && blkChoiceY === 1 && gridLocX === 0 && gridLocY === gridSizeY - 1 ? 3 :\r\n                              blkChoiceX === 2 && blkChoiceY === 2 && gridLocX === 2 && gridLocY === 0 ? 4 :\r\n                              blkChoiceX === 2 && blkChoiceY === 2 && gridLocX === 0 && gridLocY === 1 ? 5 :\r\n                  blkChoiceX === 1 && blkChoiceY === 2 && gridLocX === gridSizeX - 2 && gridLocY === 2 ? 6 :\r\n                  blkChoiceX === 1 && blkChoiceY === 2 && gridLocX === gridSizeX - 1 && gridLocY === 0 ? 7 : pointAttribute\r\n\r\n\r\n    } while (!((gridSizeX <= 12 && gridSizeY <= 12) &&\r\n            (gridSizeX < 12 || gridSizeY < 12)))  \r\n\r\n    return [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute]\r\n  }\r\n\r\n\r\n\r\n  function getPossibleNextPointOffsetType(x, y) {\r\n    const Grid6_6 =\r\n    [\r\n      [[4, 5], [5, 6], [4, 7], [4, 7], [5, 7], [6, 7]],\r\n      [[3, 4], [3, 6], [0, 3], [3, 5], [0, 6], [0, 7]],\r\n      [[2, 5], [1, 4], [0, 1], [3, 4], [2, 5], [1, 6]],\r\n      [[2, 5], [5, 6], [4, 7], [0, 2], [1, 5], [0, 6]],\r\n      [[3, 4], [1, 4], [4, 7], [4, 7], [0, 2], [1, 7]],\r\n      [[2, 3], [1, 3], [1, 0], [3, 0], [0, 2], [0, 1]]\r\n    ];\r\n\r\n    let [gridSizeX, gridSizeY, gridLocX, gridLocY, pointAttribute] = getPointGridAttribute(x, y)\r\n\r\n    const shouldReverse = gridSizeX < gridSizeY\r\n\r\n    if (shouldReverse) {\r\n      /* swap gridSizeX and gridSizeY */\r\n      let t = gridSizeX\r\n      gridSizeX = gridSizeY\r\n      gridSizeY = t\r\n\r\n      /* swap gridSizeX and gridSizeY */\r\n      t = gridLocX\r\n      gridLocX = gridLocY\r\n      gridLocY = t\r\n    }\r\n\r\n    const p = Grid6_6[gridLocY][gridLocX]\r\n    let next_a_offsetType = p[0]\r\n    let next_b_offsetType = p[1]\r\n\r\n    if (shouldReverse) {\r\n      next_a_offsetType = (9 - next_a_offsetType) % 8\r\n      next_b_offsetType = (9 - next_b_offsetType) % 8;\r\n    }\r\n\r\n    if (pointAttribute !== 8) {\r\n      let pathOrigin = offsetTypeOriginArr[pointAttribute]\r\n      let pathSubstitute = offsetTypeSubstituteArr[pointAttribute]\r\n      if (next_a_offsetType === pathOrigin) {\r\n        next_a_offsetType = pathSubstitute\r\n      } else if (next_b_offsetType === pathOrigin) {\r\n        next_b_offsetType = pathSubstitute\r\n      } else {\r\n        console.log('pathOrigin must always be one of next_a_offsetType and next_b_offset')\r\n      }\r\n    }\r\n\r\n\r\n    return [gridSizeX, gridSizeY, gridLocX, gridLocY,\r\n      pointAttribute, p, next_a_offsetType, next_b_offsetType]\r\n  }\r\n\r\n  function getPossibleNextPoint(x, y) {\r\n\r\n    let [gridSizeX, gridSizeY, gridLocX, gridLocY,\r\n      pointAttribute, p, next_a_offsetType, next_b_offsetType] = \r\n      getPossibleNextPointOffsetType(x, y)\r\n\r\n    let p_a = offsetDirArr[next_a_offsetType]\r\n    let p_b = offsetDirArr[next_b_offsetType]\r\n    let next_a_x_p = x + p_a[0]\r\n    let next_a_y_p = y + p_a[1]\r\n    let next_b_x_p = x + p_b[0]\r\n    let next_b_y_p = y + p_b[1]\r\n\r\n\r\n\r\n    return [p_b, next_a_x_p, next_a_y_p, next_b_x_p, next_b_y_p]\r\n  }\r\n  //\r\n\r\n  let nextX, nextY\r\n  \r\n  let [p_b, next_a_x_p, next_a_y_p, next_b_x_p, next_b_y_p] = \r\n    getPossibleNextPoint(x, y)\r\n\r\n  if (next_a_x_p === lastX && next_a_y_p === lastY) {\r\n    nextX = next_b_x_p\r\n    nextY = next_b_y_p \r\n  } else if (next_b_x_p === lastX && next_b_y_p === lastY) {\r\n    nextX = next_a_x_p\r\n    nextY = next_a_y_p\r\n  } else { console.log('Neither of the next pointers match the lastXY (getNextPoint') }\r\n  \r\n  console.log('\\n','lastX: ', lastX, 'lastY: ', lastY, '\\n')\r\n  console.log('\\n','nextX: ', nextX,'nextY: ',nextY,'\\n')\r\n  return [nextX, nextY]\r\n}\r\n\r\nconst pointSerialize = (x, y) => x * 12 + y\r\n\r\n\r\n// TODO: maybe unnecessary \r\nfunction getNextPointSerialize(x, y, lastX, lastY) {\r\n\r\n  console.log('\\n', 'starting x: ', x,'\\n',\r\n    'starting y: ', y,'\\n',\r\n    'last x: ', lastX,'\\n',\r\n    'last y: ', lastY,'\\n')\r\n\r\n  let [nextX, nextY] = getNextPoint(x, y, lastX, lastY)\r\n  console.log('\\n','serialized: ',pointSerialize(nextX, nextY,'\\n'))\r\n  return pointSerialize(nextX, nextY)\r\n}\r\n\r\n\r\n// TODO: Remove dummy loggers\r\nconst ub = (b) => console.log('new board ', b);\r\nconst mk = (m) => console.log('knight moves ', m);\r\nconst divideandconquer =  async (\r\n\t\t\tboard, \r\n\t\t\tcurmove, \r\n\t\t\tlastmove, \r\n\t\t\tupdateBoard, \r\n\t\t\tmoveKnight,\r\n\t\t\tupdateCurmove,\r\n      updateLastmove,\r\n      iterate\r\n\t\t) => {\r\n\t\tif (actionQueue.length > 143) {\r\n\t\t\tconsole.log('board conquered');\r\n\t\t\treturn;\r\n\t\t}\r\n    if (curmove[0] === 1 && curmove[1] === 0) {\r\n\t\t\t\tconsole.log('board conquered');\r\n\t\t\t\treturn;\r\n\t\t}\r\n    let curBoard = board;\r\n    curBoard[curmove[0]][curmove[1]] = 1\r\n\r\n    const nextmove = getNextPoint(curmove[0], curmove[1], lastmove[0], lastmove[1])\r\n\t\t\t\t\t\t\t\tif (curBoard[lastmove[0]][lastmove[1]] === 0) {\r\n\t\t\t\t\t\t\t\tcurBoard[lastmove[0]][lastmove[1]] = 1;\r\n            }\r\n\r\n\t\tactionQueue.enqueue(() => {\r\n      iterate()\r\n\t\t\tmoveKnight(nextmove)\r\n      updateBoard(curBoard)\r\n    })\r\n\r\n\r\n\t\tcurBoard[nextmove[0]][nextmove[1]] = 1\r\n\r\n\t\tif (divideandconquer(\r\n\t\t\tcurBoard,\r\n\t\t\tnextmove, curmove, updateBoard, moveKnight,\r\n\t\t\tupdateCurmove, updateLastmove, iterate\r\n\t\t)) return true;\r\n\t\telse return false\r\n\t\t\r\n}\r\n\r\nexport default divideandconquer;\r\n","import backtrack from '../algorithms/backtracking';\r\nimport warnsdorf from '../algorithms/warnsdorf';\r\nimport divideandconquer from '../algorithms/divideandconquer';\r\nimport actionQueue from '../queue/action-queue';\r\n\r\nconst MOVE_KNIGHT = 'MOVE_KNIGHT';\r\nconst UPDATE_BOARD = 'UPDATE_BOARD';\r\nconst FAILURE = 'FAILURE';\r\nconst RUN_SCRIPT = 'RUN_SCRIPT';\r\nconst STOP_SCRIPT = 'STOP_SCRIPT';\r\nconst CHANGE_SPEED = 'CHANGE_SPEED';\r\nconst CHANGE_SCRIPT = 'CHANGE_SCRIPT';\r\nconst CHANGE_SIZE = 'CHANGE_SIZE';\r\nconst ADD_MOVE = 'ADD_MOVE';\r\nconst UPDATE_CURMOVE = 'UPDATE_CURMOVE';\r\nconst UPDATE_LASTMOVE = 'UPDATE_LASTMOVE';\r\nconst ITERATE = 'ITERATE';\r\nconst MODULATE_SPEED = 'MODULATE_SPEED';\r\n\r\nexport const moveKnight = knight => ({\r\n  type: MOVE_KNIGHT,\r\n  knight: knight,\r\n});\r\n\r\nexport const updateBoard = board => ({\r\n  type: UPDATE_BOARD,\r\n  board: board,\r\n});\r\n\r\nexport const failure = () => ({\r\n  type: FAILURE,\r\n});\r\n\r\nexport const stopScript = () => ({\r\n  type: STOP_SCRIPT,\r\n});\r\n\r\nexport const runScript = () => ({\r\n\ttype: RUN_SCRIPT\r\n});\r\n\r\nexport const changeScript = (script) => ({\r\n\ttype: CHANGE_SCRIPT,\r\n\tscript\r\n});\r\n\r\nexport const changeSize = (size) => ({\r\n\ttype: CHANGE_SIZE,\r\n\tsize\r\n});\r\n\r\nexport const addMove = (move) => ({\r\n\ttype: ADD_MOVE,\r\n\tmove\r\n});\r\n\r\nexport const changeSpeed = speed => ({\r\n\t\ttype: CHANGE_SPEED,\r\n\t\tspeed\r\n})\r\n\r\nexport const updateCurmove = (move) => ({\r\n\ttype: UPDATE_CURMOVE,\r\n\tmove\r\n})\r\n\r\nexport const updateLastmove = (move) => ({\r\n\ttype: UPDATE_LASTMOVE,\r\n\tmove\r\n})\r\n\r\nexport const iterate = () => ({\r\n\ttype: ITERATE\r\n})\r\n\r\nexport const modulateSpeed = speed => ({\r\n\t\ttype: modulateSpeed,\r\n\t\tspeed\r\n})\r\n\r\nconst initialState = {\r\n  knight: [0, 0],\r\n  lastMove: [0, 0],\r\n  moves: [[0,0]],\r\n  curMove: [0, 2],\r\n  lastMove: [1, 0],\r\n  board: [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  iterations: 0,\r\n  timeout: {},\r\n  speed: 80,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n\t\tcase CHANGE_SPEED:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tspeed: action.speed\r\n\t\t\t})\r\n    case MOVE_KNIGHT:\r\n      return Object.assign({}, state, {\r\n        knight: [action.knight[1], action.knight[0]],\r\n      });\r\n\r\n    case UPDATE_BOARD:\r\n      return Object.assign({}, state, {board: action.board});\r\n\r\n    case FAILURE:\r\n      alert('Failed to converge on a correct solution. Try again.');\r\n      break;\r\n\r\n    case RUN_SCRIPT:\r\n\r\n      return state;\r\n\r\n    case STOP_SCRIPT:\r\n\r\n      return state;\r\n\r\n\t\tcase ITERATE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\titerations: state.iterations + 1\r\n\t\t\t});\r\n\t\t\t\r\n\t\tcase ADD_MOVE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tmoves: [...state.moves, action.move]\r\n\t\t\t});\r\n\t\t\t\r\n\t\tcase UPDATE_CURMOVE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcurMove: action.move\r\n\t\t\t});\r\n\t\tcase UPDATE_LASTMOVE:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tlastMove: action.move\r\n\t\t\t});\r\n\r\n    default:\r\n      console.log('Switch function error in board store');\r\n      return initialState;\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {iterate, moveKnight, updateBoard, addMove, updateCurmove, updateLastmove, runScript, changeSpeed} from '../store/board';\r\nimport backtrack from '../algorithms/backtracking';\r\nimport warnsdorf from '../algorithms/warnsdorf';\r\nimport divideandconquer from '../algorithms/divideandconquer';\r\nimport actionQueue from '../queue/action-queue';\r\n\r\nclass Board extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      speed: 80,\r\n      start: [[0, 0]],\r\n      curMove: [2,0],\r\n      lastMove: [0,1]\r\n    };\r\n\r\n    this.backtrack = backtrack.bind(this);\r\n    this.warnsdorf = warnsdorf.bind(this);\r\n    this.divideandconquer = divideandconquer.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n\t\t\t\r\n\t\t\tactionQueue.clearQueueInterval();\r\n\t\t\tactionQueue.modulateSpeed(e.target.value);\r\n\t\t\t\r\n\t\t\tthis.props.changeSpeed(e.target.value);\r\n\t\t\tthis.setState({speed: e.target.value});\r\n\r\n\t\t\tactionQueue.changeSpeed(e.target.value);\r\n  }\r\n\r\n\trun(algo) {\r\n\t\t\tactionQueue.clear();\r\n\t\t\tlet board = [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  ]\r\n\t\tlet moves = [[0,0]]\t\r\n\t\tlet curMove = [0,2]\r\n\t\tlet lastMove = [1,0]\r\n\r\n\t\t\r\n\t\tthis.props.updateCurmove(curMove);\r\n\t\tthis.props.updateLastmove(lastMove);\r\n\t\tthis.props.updateBoard(board);\r\n\t\tthis.props.moveKnight([0,0]);\r\n\r\n\r\n    console.log(this.props.iterate)\r\n    console.log(this.props.addMove)\r\n\r\n\t\tif (algo === 'warnsdorf') {\r\n\t\t\twarnsdorf(this.props.board, this.props.moves, this.props.updateBoard,\r\n\t\t\t this.props.moveKnight, this.props.addMove, this.props.iterate);\r\n\t\t} else {\r\n\t\t\tdivideandconquer(this.props.board, this.props.curMove, this.props.lastMove,\r\n\t\t\t\t\t\t\t\t\t\tthis.props.updateBoard, this.props.moveKnight, this.props.updateCurmove, this.props.updateLastmove, this.props.iterate)\r\n\t\t}\r\n\t\tactionQueue.startQueueing(this.props.speed);\r\n\r\n\t}\r\n\r\n  renderSquare(i) {\r\n    let x = i % 12;\r\n    let y = Math.floor(i / 12);\r\n    let black = (x + y) % 2 === 1;\r\n    let knight;\r\n    let visited;\r\n    if (this.props.knight) {\r\n      knight = this.props.knight[0] === x && this.props.knight[1] === y;\r\n    }\r\n    if (this.props.board) {\r\n      visited = this.props.board[y][x] === 1;\r\n    }\r\n\r\n    return knight ? (\r\n      black ? (\r\n        <div key={i} className=\"black square knight\" />\r\n      ) : (\r\n        <div key={i} className=\"white square knight\" />\r\n      )\r\n    ) : black ? (\r\n      visited ? (\r\n        <div key={i} className=\"black square \" />\r\n      ) : (\r\n        <div key={i} className=\"black square\" />\r\n      )\r\n    ) : visited ? (\r\n      <div key={i} className=\"white square \" />\r\n    ) : (\r\n      <div key={i} className=\"white square\" />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let squares = [];\r\n\r\n    for (let i = 0; i < 144; i++) {\r\n      squares.push(this.renderSquare(i));\r\n    }\r\n    return (\r\n      <div id=\"main\">\r\n        <div id=\"img\">\r\n        </div>\r\n        <div className=\"middle\">\r\n          <div id=\"title\">\r\n            <h1>Knight's Tour</h1>\r\n            <p>\r\n              By <a href=\"http://matthw.com\">Matthew Howe</a>\r\n            </p>\r\n          </div>\r\n          <div id=\"board\">{squares}</div>\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <button onClick={() => this.run('warnsdorf')} id=\"b3\">\r\n            Warnsdorf's Rule\r\n          </button>\r\n          <button\r\n            onClick={() => this.run()}\r\n            id=\"b3\">\r\n            Divide and Conquer\r\n          </button>\r\n          <button onClick={() => this.run()} id=\"b3\">\r\n            Neural Network Solution\r\n          </button>\r\n          <div />\r\n          <div>\r\n            <p className=\"speed-text\">Speed: {this.state.speed} ms</p>\r\n            <input\r\n              name=\"speed\"\r\n              onChange={e => {\r\n                this.handleChange(e);\r\n              }}\r\n              type=\"range\"\r\n              min=\"10\"\r\n              max=\"500\"\r\n              value={this.state.speed}\r\n              className=\"slider\"\r\n            />\r\n          </div>\r\n          <p className=\"iterations\">Iterations: {this.props.iterations}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n\tlastMove: state.board.lastMove,\r\n\tmoves: state.board.moves,\r\n\tcurMove: state.board.curMove,\r\n  board: state.board.board,\r\n  knight: state.board.knight,\r\n  iterations: state.board.iterations,\r\n\tspeed: state.board.speed\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  moveKnight: knight => dispatch(moveKnight(knight)),\r\n  updateBoard: newBoard => dispatch(updateBoard(newBoard)),\r\n  runScript: () => dispatch(runScript()),\r\n  addMove: move => dispatch(addMove(move)),\r\n  updateCurmove: move => dispatch(updateCurmove(move)),\r\n  updateLastmove: move => dispatch(updateLastmove(move)),\r\n  changeSpeed: speed => dispatch(changeSpeed(speed)),\r\n  iterate: () => dispatch(iterate()),\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Board);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Board from './components/Board';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className='app'>\r\n      <div>\r\n        <Board />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport board from './board';\r\n\r\nconst reducer = combineReducers({board});\r\nconst middleware = composeWithDevTools(\r\n  applyMiddleware(createLogger({collapsed: true})),\r\n);\r\nconst store = createStore(reducer, middleware);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}