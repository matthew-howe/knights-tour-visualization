{"version":3,"sources":["store/board.js","components/Board.js","App.js","serviceWorker.js","store/algorithm.js","store/index.js","index.js"],"names":["initialState","knight","board","iterations","Board","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","iter","speed","e","setState","target","value","pos","filter","move","moves","length","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","updateBoard","moveKnight","setTimeout","asyncToGenerator","regenerator_default","a","mark","_callee","curBoard","lastMove","lastlastMove","lastlastlastMove","llllMove","possibleMoves","moveIdx","curMove","row","column","wrap","_context","prev","next","_this2","boardVisited","abrupt","findMoves","shuffle","validMove","push","props","tour","pop","stop","i","visited","x","y","black","react_default","createElement","key","className","_this3","squares","renderSquare","id","onClick","name","onChange","handleChange","type","min","max","Component","connect","dispatch","newBoard","App","components_Board","Boolean","window","location","hostname","match","script","temp","reducer","combineReducers","arguments","undefined","action","assign","alert","console","log","algorithm","newSpeed","newTemp","middleware","composeWithDevTools","applyMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.057c59e3.chunk.js","sourcesContent":["const MOVE_KNIGHT = \"MOVE_KNIGHT\"\nconst UPDATE_BOARD = \"UPDATE_BOARD\"\nconst FAILURE = \"FAILURE\"\nconst RUN_SCRIPT = \"RUN_SCRIPT\"\n\nexport const moveKnight = (knight) => ({\n  type: MOVE_KNIGHT,\n  knight: knight\n})\n\nexport const updateBoard = (board) => ({\n  type: UPDATE_BOARD,\n  board: board\n})\n\nexport const failure = () => ({\n  type: FAILURE,\n})\n\nexport const runScript = () => ({\n  type: RUN_SCRIPT,\n})\n\nconst initialState = {\n  knight: [0, 0],\n  board: [\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  [0,0,0,0,0,0,0,0],\n  ],\n  iterations: 0\n}\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case MOVE_KNIGHT:\n      return Object.assign({}, state, {knight: [action.knight[1], action.knight[0]]})\n    case UPDATE_BOARD:\n      return Object.assign({}, state, {board: action.board})\n    case FAILURE:\n      alert(\"Failed to converge on a correct solution. Try again.\")\n      break;\n    case RUN_SCRIPT:\n      return initialState // reset the board\n    default:\n      console.log(\"Switch function error in board store\")\n      return initialState\n  }\n}\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { moveKnight, updateBoard } from '../store/board';\nimport Slider, { Range } from 'rc-slider';\n// import 'rc-slider/assests/index.css';\n\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n\t\titer: 0,\n\t\tspeed: 100\n    }\n  }\n\n  handleChange(e) {\n\tthis.setState({ speed: e.target.value})\n  }\n\n  findMoves(pos) {\n    let movesArr = [\n      [pos[0] - 1, pos[1] - 2],\n      [pos[0] - 2, pos[1] - 1],\n      [pos[0] + 1, pos[1] - 2],\n      [pos[0] + 2, pos[1] - 1],\n      [pos[0] - 2, pos[1] + 1],\n      [pos[0] - 1, pos[1] + 2],\n      [pos[0] + 1, pos[1] + 2],\n      [pos[0] + 2, pos[1] + 1],\n    ];\n    let posMoves = movesArr.filter(move => {\n      return move[0] >= 0 && move[1] >= 0 && move[0] < 8 && move[1] < 8;\n    });\n    return posMoves;\n  }\n\n  validMove(board, pos) {\n    return board[pos[0]][pos[1]] !== 1;\n  }\n\n  boardVisited(moves) {\n    return moves.length === 63;\n  }\n\n  shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n   async tour(board, moves, updateBoard, moveKnight) {\n    this.setState(state => {\n      state.iter++\n      return {\n        iter: state.iter++\n      }\n    })\n     if (this.state.iter < 2000) {\n     await setTimeout(async () => {\n      let curBoard = board;\n      curBoard[0][0] = 1\n\n      if (this.boardVisited(moves)) {\n        return true;\n      }\n\n      const lastMove = moves[moves.length - 1];\n      const lastlastMove = moves[moves.length - 2];\n      const lastlastlastMove = moves[moves.length - 3];\n      const llllMove = moves[moves.length - 4];\n      let possibleMoves = this.findMoves(lastMove);\n      possibleMoves = this.shuffle(possibleMoves)\n\n      for (let moveIdx = 0; moveIdx < possibleMoves.length; moveIdx++) {\n        const curMove = possibleMoves[moveIdx];\n        if (this.validMove(curBoard, curMove)) {\n          moves.push(curMove);\n          let row = curMove[0]\n          let column = curMove[1]\n\n          curBoard[row][column] = 1\n          \n          \n          this.props.moveKnight(curMove);\n          this.props.updateBoard(curBoard);\n          if (this.tour(curBoard, moves, updateBoard, moveKnight)) {\n            return true \n          } \n\n          moves.pop();\n          curBoard[curMove[0]][curMove[1]] = 0;\n          this.props.moveKnight(moves[moves.length - 1]);\n          this.props.updateBoard(curBoard);\n          \n        }\n      }\n       curBoard[lastMove[0]][lastMove[1]] = 0\n       curBoard[lastlastMove[0]][lastlastMove[1]] = 0\n       curBoard[lastlastlastMove[0]][lastlastlastMove[1]] = 0\n       curBoard[llllMove[0]][llllMove[1]] = 0\n       moves.pop()\n       moves.pop()\n       moves.pop()\n       moves.pop()\n       this.props.moveKnight(moves[moves.length - 2]);\n       this.props.updateBoard(curBoard);\n      this.tour(curBoard, moves, updateBoard, moveKnight) \n     }, this.state.speed)\n     }\n  }\n\n  renderSquare(i) {\n    let x = i % 8;\n    let y = Math.floor(i / 8);\n    let black = (x + y) % 2 === 1;\n    let knight;\n    let visited;\n    if (this.props.knight) {\n      knight = this.props.knight[0] === x && this.props.knight[1] === y;\n    }\n    if (this.props.board) {\n      visited = this.props.board[y][x] === 1;\n    }\n\n    return knight ? (\n      black ? (\n        <div key={i} className=\"black square knight\" />\n      ) : (\n        <div key={i} className=\"white square knight\" />\n      )\n    ) : black ? (\n      visited ? (\n        <div key={i} className=\"black square visited\" />\n      ) : (\n        <div key={i} className=\"black square\" />\n      )\n    ) : visited ? (\n      <div key={i} className=\"white square visited\" />\n    ) : (\n      <div key={i} className=\"white square\" />\n    );\n  }\n\n  render() {\n    let squares = [];\n\n    for (let i = 0; i < 64; i++) {\n      squares.push(this.renderSquare(i));\n    }\n    return (\n      <div id=\"main\">\n        <div id=\"board\">{squares}</div>\n        <div id=\"buttons\">\n          \n          <button\n            onClick={() =>\n              this.tour(\n                this.props.board,\n                [[0, 0]],\n                this.props.updateBoard,\n                this.props.moveKnight\n              )\n            }\n            id=\"b4\"\n          >\n            Brute Force Permutations\n          </button>\n\t\t  <button\n\n            onClick={() =>\n              this.tour(\n                this.props.board,\n                [[0, 0]],\n                this.props.updateBoard,\n                this.props.moveKnight\n              )\n            }\n            id=\"b4\"\n          >\n            Warnsdorf's Algorithm\n          </button>\n          <div />\n          <p>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Iterations:{' '}\n            {this.state.iter} \n          </p>\n\t\t  <p>\n\t\t\t  \n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Speed:{' '}\n            {this.state.speed} ms\n\t\t  </p>\n\t\t  <input\n\t\t\t  name=\"speed\"\n\t\t\t  onChange={e => {\n\t\t\t\t  this.handleChange(e)\n\t\t\t  }}\n\t\t\t  type=\"range\"\n\t\t\t  min=\"10\"\n\t\t\t  max=\"500\"\n\t\t\t  value={this.state.speed}\n\t\t\t  className=\"slider\"\n\t\t\t/>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = state => ({\n  board: state.board.board,\n  knight: state.board.knight,\n  iterations: state.board.iterations,\n});\n\nconst mapDispatch = dispatch => ({\n  moveKnight: (knight) => dispatch(moveKnight(knight)),\n  updateBoard: (newBoard) => dispatch(updateBoard(newBoard)),\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Board);\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n\n    <div className='app'>\n      <div id=\"title\">\n        <h1>Knight's Tour</h1>\n        <p>By Matthew Howe</p>\n      </div>\n      <div>\n        <Board />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const RUN_SCRIPT = \"RUN_SCRIPT\"\nconst CHANGE_SPEED = \"CHANGE_SPEED\"\nconst MODULATE_SPEED = \"MODULATE_SPEED\"\nconst UPDATE_TEMP = \"UPDATE_TEMP\"\n\nexport const runScript = script => ({\n  type: RUN_SCRIPT,\n  script: script\n})\n\nexport const changeSpeed = newSpeed => ({\n  type: CHANGE_SPEED,\n  newSpeed: newSpeed\n})\n\nexport const modulateSpeed = newSpeed => ({\n  type: MODULATE_SPEED,\n  newSpeed: newSpeed\n})\n\nexport const updateTemp = newTemp => ({\n  type: UPDATE_TEMP,\n  newTemp: newTemp\n})\n\nconst initialState = {\n  script: null,\n  speed: 125,\n  temp: null\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"RUN_SCRIPT\":\n      return Object.assign({}, state, {script: action.script})\n    case \"CHANGE_SPEED\":\n      return Object.assign({}, state, {speed: action.newSpeed})\n    case \"MODULATE_SPEED\":\n      return Object.assign({}, state, {speed: action.newSpeed})\n    case \"UPDATE_TEMP\":\n      return Object.assign({}, state, {temp: action.newTemp})\n    default:\n      return initialState\n  }\n}\n  \n","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {createLogger} from 'redux-logger'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport board from './board'\nimport algorithm from './algorithm'\n\nconst reducer = combineReducers({board, algorithm})\nconst middleware = composeWithDevTools(\n  applyMiddleware(createLogger({collapsed: true}))\n)\nconst store = createStore(reducer, middleware)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}